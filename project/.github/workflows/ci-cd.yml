name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run tests
        run: ./gradlew test
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: build/reports/tests/

  integration:
    runs-on: ubuntu-latest
    needs: [backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Start backend server
        run: |
          chmod +x gradlew
          ./gradlew bootRun &
          sleep 30
      - name: Run integration tests
        run: |
          echo "Integration tests completed"

  deploy:
    runs-on: ubuntu-latest
    needs: [backend, integration]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build backend JAR
        run: |
          chmod +x gradlew
          ./gradlew bootJar
      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp build/libs/*.jar deployment/
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment/
      - name: Deploy to server (placeholder)
        run: |
          echo "Deployment step - 여기에 실제 배포 스크립트를 추가하세요"
          echo "예: AWS S3, Heroku, VPS 등" 
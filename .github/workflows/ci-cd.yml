name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # 백엔드 빌드 및 테스트
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: build/reports/tests/
        
  # 프론트엔드 빌드 및 테스트
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run linting
      run: |
        cd frontend
        npm run lint
      continue-on-error: true
        
    - name: Run tests
      run: |
        cd frontend
        npm test -- --watchAll=false
      continue-on-error: true
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload frontend build
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        
  # 통합 테스트 (백엔드와 프론트엔드가 모두 성공한 후)
  integration:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        
    - name: Start backend server
      run: |
        chmod +x gradlew
        ./gradlew bootRun &
        sleep 30
        
    - name: Run integration tests
      run: |
        # 여기에 통합 테스트 스크립트를 추가할 수 있습니다
        echo "Integration tests completed"
        
  # 배포 (main/master 브랜치에 푸시된 경우에만)
  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend, integration]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        
    - name: Build backend JAR
      run: |
        chmod +x gradlew
        ./gradlew bootJar
        
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp build/libs/*.jar deployment/
        cp -r frontend/build deployment/frontend
        
    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deployment/
        
    - name: Deploy to server (placeholder)
      run: |
        echo "Deployment step - 여기에 실제 배포 스크립트를 추가하세요"
        echo "예: AWS S3, Heroku, VPS 등" 
